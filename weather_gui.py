# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'weather_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(467, 574)
        MainWindow.setStyleSheet("background-color: rgb(34, 38, 56);")
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(150, 20, 241, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(48)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAutoFillBackground(False)
        self.label.setStyleSheet("background-color: rgba(0,0,0,0%)");
        self.label.setStyleSheet("color: rgb(255, 255, 255)");
        self.label.setScaledContents(False)
        self.label.setObjectName("label")
        self.searchButton = QtWidgets.QPushButton(self.centralwidget)
        self.searchButton.setGeometry(QtCore.QRect(30, 85, 110, 33))
        self.searchButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.searchButton.setObjectName("searchButton")
        self.searchBox = QtWidgets.QLineEdit(self.centralwidget)
        self.searchBox.setGeometry(QtCore.QRect(200, 84, 241, 34))
        self.searchBox.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.searchBox.setText("")
        self.searchBox.setObjectName("searchBox")
        self.enterCity = QtWidgets.QLabel(self.centralwidget)
        self.enterCity.setStyleSheet("color: rgb(34, 38, 56);")
        self.enterCity.setGeometry(QtCore.QRect(140, 85, 61, 32))
        self.enterCity.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.enterCity.setObjectName("enterCity")
        self.infoFrame = QtWidgets.QFrame(self.centralwidget)
        self.infoFrame.setGeometry(QtCore.QRect(30, 120, 411, 361))
        self.infoFrame.setStyleSheet("background-color: rgb(253, 250, 255);")
        self.infoFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.infoFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.infoFrame.setObjectName("infoFrame")
        self.weatherIcon = QtWidgets.QLabel(self.infoFrame)
        self.weatherIcon.setGeometry(QtCore.QRect(20, 20, 111, 91))
        self.weatherIcon.setText("")
        self.weatherIcon.setObjectName("weatherIcon")
        self.tempBox = QtWidgets.QLabel(self.infoFrame)
        self.tempBox.setGeometry(QtCore.QRect(160, 10, 131, 61))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.tempBox.setFont(font)
        self.tempBox.setText("")
        self.tempBox.setScaledContents(True)
        self.tempBox.setObjectName("tempBox")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 467, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        self.searchButton.clicked.connect(self.searchCity)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Weather"))
        self.searchButton.setText(_translate("MainWindow", "Search"))
        self.enterCity.setText(_translate("MainWindow", " City:"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))

    def searchCity(self):
        city = self.searchBox.text()
        API_key = "87b9acae8fd62ab7bcbd18a7e305feb5" #make script which fetches this
        base_url = "http://api.openweathermap.org/data/2.5/weather?"
        Final_url = base_url + "appid=" + API_key + "&q=" + city + "&units=metric"
        json_response = requests.get(Final_url).json()
        if json_response["cod"]==200:
            main = json_response["main"]
            current_temperature = main["temp"]
            self.tempBox.setText(str(current_temperature) + " Â°C")
            self.weatherIcon.setPixmap(QtGui.QPixmap("sun.png"))
            self.weatherIcon.setScaledContents(True)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

"""
                import requests
                from pprint import pprint
                import requests


                API_key = "87b9acae8fd62ab7bcbd18a7e305feb5"
                base_url = "http://api.openweathermap.org/data/2.5/weather?"

                city_name = input("Enter a city name : ")
                Final_url = base_url + "appid=" + API_key + "&q=" + city_name + "&units=metric"

                json_response = requests.get(Final_url).json()


                if json_response["cod"]==200:
                    print("\nCurrent Weather Data Of " + city_name +":\n")
                    y = json_response["main"]

                    # store the value corresponding
                    # to the "temp" key of y
                    current_temperature = y["temp"]
                    weather = json_response["weather"][0].get("main")
                    # store the value of "weather"
                    # key in variable z


                    pprint(json_response)

                    print ()
                    print()
                    print (current_temperature)
                    print (weather)
                else:
                    print ("City does not exist in database. Please try another city.")
            """
